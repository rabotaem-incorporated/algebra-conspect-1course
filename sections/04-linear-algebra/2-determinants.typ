#import "../../utils/core.typ": *

== Определители

Мотивация: мы знаем, что матрицы тесно связаны с системами линейных уравнений и мы хотим знать, когда системы разрешимы единственным образом, когда несовместны, и когда имеют бесконечно много решений (совместные неопределенные).

#def[
  Системы линейных уравнений подразделяются на _несовместные_, _совместные определенные_, _совместные неопределенные_.
]

#example[
  Рассмотрим систему с двумя неизвестными в общем случае.

  $ cases(
    a_(11) x_1 + a_(12) x_2 = b_1,
    a_(21) x_1 + a_(22) x_2 = b_2,
  ) $

  Оказывается, что она совместима и определенна тогда и только тогда, когда $ a_11 a_22 - a_21 a_12 != 0 $.

  Отсюда вытекает понятие определителя матрицы 2 на 2:

  #{
    set math.mat(delim: "|")
    $ mat(a_11, a_12; a_21, a_22) = a_11 a_22 - a_21 a_12 $
  }
]

#def[
  Пусть $A in M_n(K)$, $K$ --- поле, $A = (a_(i j))$

  _Определителем_ или _детерминантом_ $A$ называется

  $ abs(A) = limits(sum)_(sigma in S_n) op("sgn")(sigma) a_(1 sigma_1) a_(2 sigma_2) ... a_(n sigma_n). $
]

#prop[
  При транспонировании определитель не меняется.
]

#proof[$
  abs(A^T) = 
  limits(sum)_(sigma in S_n) op("sgn")(sigma) a_(sigma_1 1) a_(sigma_2 2) ... a_(sigma_n n) = 
  limits(sum)_(sigma in S_n) op("sgn")(sigma) a_(1 sigma^(-1)_1) a_(2 sigma^(-1)_2) ... a_(n sigma^(-1)_n) = \
  =limits(sum)_(sigma in S_n) op("sgn")(sigma^(-1)) a_(1 sigma^(-1)_1) a_(2 sigma^(-1)_2) ... a_(n sigma^(-1)_n) =
  -1)_n) =
  limits(sum)_(sigma in S_n) op("sgn")(sigma) a_(1 sigma_1) a_(2 sigma_2) ... a_(n sigma_n) = abs(A)
  
$]

// Тут было потеряно очень много прогресса
